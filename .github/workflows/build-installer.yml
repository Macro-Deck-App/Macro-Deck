name: Build Windows Installer

on:
  release:
    types: [published]

jobs:
  check-release-name:
      runs-on: ubuntu-latest
      steps:
      - name: Check tag format
        run: |
          RELEASE_NAME="${{ github.event.release.name }}"

          BASE_PATTERN='^[0-9]+\.[0-9]+\.[0-9]+$'
          PREVIEW_PATTERN='^[0-9]+\.[0-9]+\.[0-9]+-preview[0-9]+$'

          if [[ ! ${RELEASE_NAME} =~ ${BASE_PATTERN} ]] && [[ ! ${RELEASE_NAME} =~ ${PREVIEW_PATTERN} ]]; then
            echo "Release name '${RELEASE_NAME}' doesn't match the expected format (X.X.X or X.X.X-previewX)"
            exit 1
          fi
          
  build-windows-installer:
    runs-on: windows-latest
    needs: check-release-name
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Download and install Inno Setup
        run: |
            Invoke-WebRequest -Uri "https://files.jrsoftware.org/is/6/innosetup-6.2.0.exe" -OutFile "innosetup.exe"
            & .\innosetup.exe /VERYSILENT /SUPPRESSMSGBOXES /SP- /NOCANCEL /NOICONS /CURRENTUSER /DIR"${{ github.workspace }}\Inno Setup"
            if (Test-Path "${{ github.workspace }}\Inno Setup\ISCC.exe") {
              Write-Output "Inno Setup installed successfully."
            } else {
              Write-Output "Inno Setup installation failed."
              exit 1
            }
            
      - name: Build Macro Deck for Windows
        run: |
          cd MacroDeck.Setup
          .\ChangeCsprojVersion.exe -p "${{ github.workspace }}\MacroDeck\MacroDeck.csproj" -n "${{github.event.release.name}}"
          .\build_macrodeck_executable.cmd
        shell: cmd
        
      - name: Build Macro Deck installer for Windows
        run: > 
              ${{ github.workspace }}\Inno Setup\ISCC.exe
                /F"macro-deck-${{github.event.release.name}}-win"
                "${{ github.workspace }}\MacroDeck.Setup\Macro Deck.iss"
        shell: cmd

      - name: Upload Windows installer to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}\Inno Setup\macro-deck-${{github.event.release.name}}-win.exe
          asset_name: macro-deck-${{github.event.release.name}}-win.exe
          asset_content_type: application/octet-stream
